server:
  port: 7002
  error:
    include-message: always

spring:

  # Redis configuration
  redis:
    host: localhost
    port: 6379
    database: 0
    password: '{cipher}938ccf6766da604328e553873b2a23ed965feea95ddb3d64a19ccf65aec51601'

  # Messaging binders for the cloud streaming
  cloud.stream:
    # Default binder
    defaultBinder: rabbit
    default.contentType: application/json
    bindings.input:
      destination: recommendations
      group: recommendationsGroup
    # Default consumer input binding parameters
    bindings.input.consumer:
      maxAttempts: 3
      backOffInitialInterval: 500
      backOffMaxInterval: 1000
      backOffMultiplier: 2.0
    # RabbitMQ consumer input binding parameters
    rabbit.bindings.input.consumer:
      autoBindDlq: true
      republishToDlq: true
    # Kafka consumer input binding parameters
    kafka.bindings.input.consumer:
      enableDlq: true

# Logging settings
logging:
  level:
    root: INFO
    com.habeebcycle: DEBUG
    org.springframework.data.redis: DEBUG

---
spring:
  config.activate.on-profile:
    - docker
  redis.host: redis

server.port: 8080

---
spring:
  config:
    activate:
      on-profile:
        - kubernetes
  redis.host: redis

server:
  port: 8080

---
spring:
  config.activate.on-profile:
    - streaming_partitioned
  cloud.stream.bindings.input.consumer:
    partitioned: true
    instanceCount: 2

---
spring:
  config.activate.on-profile:
    - streaming_instance_0
  cloud.stream.bindings.input.consumer.instanceIndex: 0

---
spring:
  config.activate.on-profile:
    - streaming_instance_1
  cloud.stream.bindings.input.consumer.instanceIndex: 1

---
spring:
  config.activate.on-profile:
    - kafka
  cloud.stream.defaultBinder: kafka

management.health.rabbit.enabled: false