server:
  port: 7003
  error:
    include-message: always

service:
  discovery-server:
    host: localhost
    port: 8761

# Discovery server configuration
eureka:
  client:
    serviceUrl:
      defaultZone: http://${service.discovery-server.host}:${service.discovery-server.port}/eureka/
    initialInstanceInfoReplicationIntervalSeconds: 5
    registryFetchIntervalSeconds: 5
  instance:
    leaseRenewalIntervalInSeconds: 5
    leaseExpirationDurationInSeconds: 5

spring:
  application:
    name: review-service

  # JDBC Datasource using MySQL
  datasource:
    url: jdbc:mysql://localhost/review-db
    username: user
    password: pwd
    maximum-pool-size: 10
    hikari.initializationFailTimeout: 60000
  # Strongly recommended to set this property to "none" in production environment!
  jpa.hibernate.ddl-auto: update

  # RabbitMQ parameters
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest

  # Messaging binders for the cloud streaming
  cloud.stream:
    # Default binder
    defaultBinder: rabbit
    default.contentType: application/json
    bindings.input:
      destination: reviews
      group: reviewsGroup
    # Default consumer input binding parameters
    bindings.input.consumer:
      maxAttempts: 3
      backOffInitialInterval: 500
      backOffMaxInterval: 1000
      backOffMultiplier: 2.0
    # RabbitMQ consumer input binding parameters
    rabbit.bindings.input.consumer:
      autoBindDlq: true
      republishToDlq: true
    # Kafka consumer input binding parameters
    kafka.bindings.input.consumer:
      enableDlq: true
    # Kafka binder broker (zookeeper) host & port
    kafka.binder:
      brokers: 127.0.0.1       # Kafka host
      defaultBrokerPort: 9092  # Kafka port

# Logging settings
logging:
  level:
    root: INFO
    com.habeebcycle: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

# Actuator endpoints
management.endpoints:
  health.show-details: "ALWAYS"
  web.exposure.include: "*"   # Lock this up in production


---
spring:
  config:
    activate:
      on-profile:
        - docker
  datasource.url: jdbc:mysql://mysql/review-db
  rabbitmq.host: rabbitmq
  cloud.stream.kafka.binder.brokers: kafka

server:
  port: 8080

service:
  discovery-server:
    host: discovery-server