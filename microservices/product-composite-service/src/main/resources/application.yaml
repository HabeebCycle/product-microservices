api:
  common:
    version: 1.0.0
    title: Product Microservices API
    description: Developing Microservices using springboot and spring cloud
    termsOfServiceUrl: Apache OS
    license: Apache License 2.0
    licenseUrl: Apache URL
    contact:
      name: Habeeb Okunade
      url: habeebcycle.com
      email: habeebcycle@gmail.com
  product-composite-service:
    get-composite-product:
      description: Returns a composite view of the specified product id
      notes: |
        # Normal response
        If the requested product id is found, the method will return information regarding:
        1. Base product information
        2. Reviews
        3. Recommendations
        4. Service/Server addresses
        (Technical information regarding the addresses of the microservices that created the response)

        # Expected partial and error responses
        1. If no product information is found, a <b>404 - Not Found</b> error will be returned
        2. If no recommendations or reviews are found for a product, a partial response will be returned

    create-composite-product:
      description: Creates a composite product
      notes: |
        # Normal response
        The composite product information posted to the API will be splitted up and stored as separate product-info, recommendation and review entities.

        # Expected error responses
        1. If a product with the same productId as specified in the posted information already exists,
           an <b>422 - Unprocessable Entity</b> error with a "duplicate key" error message will be returned

    delete-composite-product:
      description: Deletes a product composite
      notes: |
        # Normal response
        Entities for product information, recommendations and reviews related to the specificed productId will be deleted.
        The implementation of the delete method is idempotent, i.e. it can be called several times with the same response.
        This means that a delete request of a non existing product will return <b>200 Ok</b>.

server:
  port: 7000
  error:
    include-message: always

app:
  product-service:
    host: localhost
    port: 7001

  recommendation-service:
    host: localhost
    port: 7002

  review-service:
    host: localhost
    port: 7003

logging:
  level:
    root: INFO
    com.habeebcycle: DEBUG

---
spring:
  config:
    activate:
      on-profile:
        - docker

server:
  port: 8080

app:
  product-service:
    host: product-service
    port: 8080

  recommendation-service:
    host: recommendation-service
    port: 8080

  review-service:
    host: review-service
    port: 8080